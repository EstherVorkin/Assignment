
import os
import csv
import sys
from operator import attrgetter

def solve1():
#the regular way to solve it
  with open('homeAssignment.csv', 'r', newline='') as csv_file:
      csv_reader = csv.reader(csv_file, delimiter=',')
      sortedlist = sorted(csv_reader, key = lambda x: (x[0], x[1]))

      for row in sortedlist:
          print(row)

      writer = csv.writer(open("homeAssignmentSol.csv", 'w', newline=''))
      for row in sortedlist:
          writer.writerow(row)
          
from flink.plan.Environment import get_environment
from flink.functions.GroupReduceFunction import GroupReduceFunction
from pyflink.table import *


def solve2():
#the hard way

import sys, csv, pyspark

from datetime import datetime
from pyspark import SparkContext
from pyspark.sql import SparkSession
from pyspark.sql.functions import col, asc,desc
from pyspark.sql.functions import *

if __name__ == '__main__':
    
    #adding headers
    with open('Desktop/homeAssignment.csv',newline='') as f:
        r = csv.reader(f)
        data = [line for line in r]
        
    with open('Desktop/homeAssignment.csv','w',newline='') as f:
        w = csv.writer(f)
        w.writerow(['letter','num'])
        w.writerows(data)    
        
    #making the assignment   
    sc = SparkContext.getOrCreate();
    spark = SparkSession(sc)
    csvFile = sc.textFile("homeAssignment.csv")
    
    df = spark.read.format('csv').options(header='true').load('Desktop/homeAssignment.csv') 
    df = df.withColumn('new_num', lpad(df.num,3, '0'))
    df.sort(col("letter").asc(),col("new_num").asc()).show(truncate=True)
    
    df.groupBy(col("letter")=='A').coalesce(1).write.format('csv').save('Desktop/outA.csv')
    df.groupBy(col("letter")=='B').coalesce(1).write.format('csv').save('Desktop/outA.csv')
    df.groupBy(col("letter")=='C').coalesce(1).write.format('csv').save('Desktop/outA.csv')
    df.groupBy(col("letter")=='D').coalesce(1).write.format('csv').save('Desktop/outA.csv')
    df.groupBy(col("letter")=='E').coalesce(1).write.format('csv').save('Desktop/outA.csv')
    df.groupBy(col("letter")=='F').coalesce(1).write.format('csv').save('Desktop/outA.csv')
  
  
if __name__ == "__main__":
  solve1()
  #solve2()
